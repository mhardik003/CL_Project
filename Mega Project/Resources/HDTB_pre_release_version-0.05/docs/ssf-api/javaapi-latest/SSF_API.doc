{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}
{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f42\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}
{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}{\f51\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}
{\*\rsidtbl \rsid10503632}{\*\generator Microsoft Word 11.0.5604;}{\info{\author Dashboard}{\operator Dashboard}{\creatim\yr2008\mo1\dy30\hr11\min6}{\revtim\yr2008\mo1\dy30\hr11\min14}{\version2}{\edmins8}{\nofpages3}{\nofwords811}{\nofchars4627}
{\*\company IIIT}{\nofcharsws5428}{\vern24689}}\ltrsect \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot10503632 \fet0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}
{\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid10503632 Descriptions of SSF API.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632  
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid10503632 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 1- Imports the following packages--
\par import java.io.PrintStream;
\par import java.util.Enumeration;
\par import sanchay.corpus.ssf.SSFProperties;
\par import sanchay.corpus.ssf.SSFSentence;
\par import sanchay.corpus.ssf.SSFStory;
\par import sanchay.corpus.ssf.features.FeatureAttribute;
\par import sanchay.corpus.ssf.features.impl.FeatureAttributeImpl;
\par import sanchay.corpus.ssf.features.FeatureStructure;
\par import sanchay.corpus.ssf.features.FeatureStructures;
\par import sanchay.corpus.ssf.features.FeatureValue;
\par import sanchay.corpus.ssf.features.impl.FSProperties;
\par import sanchay.corpus.ssf.features.impl.FeatureStructuresImpl;
\par import sanchay.corpus.ssf.features.impl.FeatureStructureImpl;
\par import sanchay.corpus.ssf.features.impl.*;
\par import sanchay.corpus.ssf.features.impl.FeatureValueImpl;
\par import sanchay.corpus.ssf.impl.SSFSentenceImpl;
\par import sanchay.corpus.ssf.impl.SSFStoryImpl;
\par import sanchay.corpus.ssf.tree.SSFNode;
\par 
\par 2:- Firstly include the SSF properties files in your modules So for doing this use the following step..
\par     
\par      This line make a object for FeatureStructure Properties files
\par      FSProperties fsp = new FSProperties();
\par      
\par     This line make a object for SSF Properties files
\par      SSFProperties ssfp = new SSFProperties();
\par       
\par      Reading the featureStructures Properties file
\par       fsp.read("props\\\\fs-mandatory-attribs.txt",
\par                     "props\\\\fs-props.txt", "UTF-8"); //throws java.io.FileNotFoundException;
\par 
\par         Reading the SSF properties files
\par        ssfp.read("props\\\\ssf-props.txt", "UTF-8"); //throws java.io.FileNotFoundException;
\par 
\par         Set the FeatureStructure Property file in module
\par         FeatureStructuresImpl.setFSProperties(fsp);
\par      
\par         Set the SSF Property file in module
\par         SSFNode.setSSFProperties(ssfp);
\par 
\par 3:- Read Input file..
\par      Ensure that input file is in Sentence level SSF or Story Level SSF
\par      
\par       For Sentence level Create an object of SSF Sentence
\par      \tab  SSFSentence sentence = new SSFSentenceImpl();
\par      \tab sentence.readFile("prune.out");
\par      
\par      For Story Level, Create an object of SSFStory
\par      \tab     SSFStory story = new SSFStoryImpl()
\par                 story.readFile("in.txt")
\par 
\par  4:- Print the SSF Output file
\par      For Sentence level
\par \tab sentence.print(System.out);
\par     For Story level
\par \tab story.print(System.out);
\par 
\par Others APIs that may be use....
\par 
\par 5:- Count number of child inside the (( and  )) use following functions.
\par     Create Object of SSFSentence. and call following function-
\par          sent.getRoot().getChildCount()
\par      where sent is object of SSFSentence. it return integer value
\par 
\par 6:- Getting the SSF node, make the object of SSFNode as follows
\par \tab SSFNode node = sent.getRoot().getChild(index value); 
\par 
\par 7:-  Getting the Catagory value of  SSF Node
\par \tab node.getName() return String value
\par 
\par 8:- Getting the node id
\par \tab node.getId(), return the String
\par 
\par 9:-  Getting token from node
\par \tab node.getLexData(), return the String
\par 
\par 10:- Getting FeatureStrucuteres
\par \tab node.getFeatureStructures(), return FeatureStructures.
\par 
\par 11-  Getting FeatureValue
\par \tab getAltFSValue(index), return FeatureStructure
\par 
\par 12-  Getting FeatureAttribute
\par \tab getAttribute(int index), return featureattrribute
\par 
\par 13-  Getting featureValue
\par \tab getAltValue(int index)
\par 
\par 14:- Count chunked children
\par       node.countChildren()\tab 
\par 
\par 15:- Set FeatureValue
\par \tab setValue(String value)
\par 
\par 16:- Modify Specific attribute value in FeatureStructure
\par \tab modifyAttributeValue(featurevalue ,int attrib index,int altvalueindex)
\par 
\par 17:- Inserting new featureStructures
\par \tab fsi.readString(String featureStructure);
\par \tab node.setFeatureStructures(fsi) 
\par \tab where fsi is the object of FeatureStructuresImpl
\par 
\par 18:- Getting a paragraph from Story
\par \tab story.getSSFParagraph(int index)
\par \tab where story is object of SSFStory
\par \tab  
\par  19:- Getting Segment value
\par \tab para.getSegment();
\par \tab where para is object of SSFParagraph
\par 
\par 20:- Count number of sentence in story
\par \tab story.countSentences()
\par 
\par 21:- Create object of SSFSentence from SSFStory
\par \tab story.getSentence(int index)\tab    
\par \tab where story is object of SSFStory.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par 22:- Convert from UTF8 to WX when String  is an input then uses this function.
\par \tab Create Object of UTF2WX class and then call this function 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632             \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 convert(String in}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 put }{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 )}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 23:- Convert From WX  to UTF8 when String is an input.
\par }\pard \ltrpar\ql \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 Create Object of WX2UTF8 class and then call this function 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632             \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 convert(String in}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 put }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 )}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par 24:- Convert from UTF8 to WX when file   is an input and file is an output then uses this function.
\par \tab Create Object of UTF2WX class and then call this function 
\par             \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 convert(File inFile, File outFile}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid10503632\charrsid10503632 )}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par 25:-  Convert from WX to UTF*when file   is an input and file is an output then uses this function.
\par \tab Create Object of WX2UTF class and then call this function 
\par             \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 convert(File inFile, File outFile}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid10503632\charrsid10503632 )}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par 
\par Sample code is:-}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10503632\charrsid10503632  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10503632 
\par }\pard \ltrpar\qc \fi720\li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 String langEnc = "hin::utf8";
\par }\pard \ltrpar\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 //File inFile = new File("tmp/tmp.utf8.txt");
\par File inFile = new File("hello_utf8.txt");
\par // File outFile = new File("tmp/tmp.wx.txt");
\par File outFile = new File("jj.txt");
\par 
\par if(args.length > 0)
\par langEnc = args[0];
\par 
\par if(args.length > 1)
\par inFile = new File(args[1]);
\par 
\par if(args.length > 2)
\par outFile = new File(args[2]);
\par 
\par //  if(inFile.getParentFile().exists() == false)
\par //    inFile.getParentFile().mkdir();
\par 
\par UTF82WX converter = new UTF82WX(langEnc);
\par 
\par try \{
\par converter.convert(inFile, outFile);
\par \} catch (FileNotFoundException e) \{
\par // TODO Auto-generated catch block
\par e.printStackTrace();
\par \} catch (IOException e) \{
\par // TODO Auto-generated catch block
\par e.printStackTrace();
\par \}}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632\charrsid10503632 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid10503632 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid10503632 
\par 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10503632\charrsid10503632 
\par }}